steps:
  # Build the container image using Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-f'
      - 'src/Dockerfile'
      - '--build-arg'
      - 'NODE_ENV=production'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${_CLERK_PUBLISHABLE_KEY}'
      - '--build-arg'
      - 'CLERK_SECRET_KEY=${_CLERK_SECRET_KEY}'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in'
      - '--build-arg'
      - 'NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up'
      - '--build-arg'
      - 'DATABASE_URL=${_DATABASE_URL}'
      - '--build-arg'
      - 'NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${_STRIPE_PUBLISHABLE_KEY}'
      - '--build-arg'
      - 'STRIPE_SECRET_KEY=${_STRIPE_SECRET_KEY}'
      - '--build-arg'
      - 'STRIPE_WEBHOOK_SECRET=${_STRIPE_WEBHOOK_SECRET}'
      - '--build-arg'
      - 'BILLING_PLAN_ENV=production'
      - '--build-arg'
      - 'NEXT_PUBLIC_APP_NAME=DLV Insight'
      - '--build-arg'
      - 'NEXT_PUBLIC_APP_DESCRIPTION=Amazon Seller Profit Analytics Platform'
      - 'src'

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    args:
      - run
      - deploy
      - $_SERVICE_NAME
      - '--image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region=$_DEPLOY_REGION'
      - '--platform=managed'
      - '--allow-unauthenticated'

images:
  - '$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'